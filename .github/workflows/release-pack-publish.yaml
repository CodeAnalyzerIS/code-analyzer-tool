name: Create a release, pack and publish the tool

on:
  push:
    tags:
      - 'v*.*.*'

env:
  IMAGE_NAME: code-analyzer-service

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        body: |
          Release ${{ github.ref }}
        draft: false
        prerelease: false
  
  pack_push_tool:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Get tag version
      run: |
        echo "tagVersion=${GITHUB_REF_NAME:1}" >> $GITHUB_ENV
    - name: Pack tool and API's with tag version
      working-directory: ./CodeAnalyzerTool/
      run: |
        dotnet build
        dotnet pack -p:PackageVersion=${{ env.tagVersion }}
    - name: Push CodeAnalyzerTool to nuget org
      working-directory: ./CodeAnalyzerTool/CodeAnalyzerTool/nupkg/
      run: dotnet nuget push CodeAnalyzerTool.${{ env.tagVersion }}.nupkg --api-key ${{secrets.NUGET_API_KEY}} --source ${{vars.NUGET_URL}}
    - name: Push CodeAnalyzerTool.API to nuget org
      working-directory: ./CodeAnalyzerTool/CodeAnalyzerTool.API/nupkg/
      run: dotnet nuget push CodeAnalyzerTool.API.${{ env.tagVersion }}.nupkg --api-key ${{secrets.NUGET_API_KEY}} --source ${{vars.NUGET_URL}}
    - name: Push RoslynPlugin.API to nuget org
      working-directory: ./CodeAnalyzerTool/RoslynPlugin.API/nupkg/
      run: dotnet nuget push CodeAnalyzerTool.RoslynPlugin.API.${{ env.tagVersion }}.nupkg --api-key ${{secrets.NUGET_API_KEY}} --source ${{vars.NUGET_URL}}

  build_publish_images:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Build image
        working-directory: ./CodeAnalyzerTool/
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
        
      - name: Log in to dockerhub
        run: echo "${{ secrets.DOCKERHUB_TOKEN  }}" | docker login --username alexanderwuytsis --password-stdin

        
      - name: Push images
        working-directory: ./CodeAnalyzerTool/
        run: |
          GH_IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          DH_IMAGE_ID=alexanderwuytsis/$IMAGE_NAME
          
          # Change all uppercase to lowercase
          GH_IMAGE_ID=$(echo $GH_IMAGE_ID | tr '[A-Z]' '[a-z]')
          DH_IMAGE_ID=$(echo $DH_IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo GH_IMAGE_ID=$GH_IMAGE_ID
          echo DH_IMAGE_ID=$DH_IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $GH_IMAGE_ID:$VERSION
          docker push $GH_IMAGE_ID:$VERSION
          docker tag $IMAGE_NAME $DH_IMAGE_ID:$VERSION
          docker push $DH_IMAGE_ID:$VERSION
  
